/* 软工 2250420 陈君 */

/* 函数实现部分，{ }内的东西可以任意调整，目前的return 0只是一个示例，可改变 */

/* 不允许定义任何形式的外部全局、静态全局、宏定义、只读变量 */

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strlen(const char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int index= 0;
    while (str[index] != '\0')
        index++;
    return index; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcat(char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = tj_strlen(s1);
    for (int j = 0; s2[j] != '\0'; i++, j++)
        s1[i] = s2[j];
    s1[i] = '\0';
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncat(char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = tj_strlen(s1);
    for (int j = 0; s2[j] != '\0'&&j<len; i++, j++)
        s1[i] = s2[j];
    s1[i] = '\0';
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcpy(char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = tj_strlen(s2);
    for (int j = 0; j <= i; j++)
        s1[j] = s2[j];
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncpy(char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    for (int j = 0; s2[j]!='\0' && j<len; j++)
        s1[j] = s2[j];
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcmp(const char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    for (int i = 0; i <= tj_strlen(s1) && i <= tj_strlen(s2); i++)
        if (s1[i] != s2[i])
            return s1[i] - s2[i];
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcasecmp(const char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    for (int i = 0; i <= tj_strlen(s1) && i <= tj_strlen(s2); i++)
    {
        if (s1[i] != s2[i])
        {
            char news1;
            char news2;
            if (s1[i] <= 'Z' && s1[i] >= 'A')
            {
                news1 = s1[i] + 32;
                if (news1 == s2[i])
                    continue;
                else
                    return news1 - s2[i];
            }
             else if (s2[i] <= 'Z' && s2[i] >= 'A')
            {
                news2 = s2[i] + 32;
                if (news2 == s1[i])
                    continue;
                else
                    return s1[i] - news2;
            }
            else
                return s1[i] - s2[i];
        }
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncmp(const char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    for (int i = 0; i <= tj_strlen(s1) && i <= tj_strlen(s2)&&i<len; i++)
        if (s1[i] != s2[i])
            return s1[i] - s2[i];
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcasencmp(const char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    for (int i = 0; i <= tj_strlen(s1) && i <= tj_strlen(s2) && i < len ; i++)
    {
        if (s1[i] != s2[i])
        {
            char news1;
            char news2;
            if (s1[i] <= 'Z' && s1[i] >= 'A')
            {
                news1 = s1[i] + 32;
                if (news1 == s2[i])
                    continue;
                else
                    return news1 - s2[i];
            }
            else if (s2[i] <= 'Z' && s2[i] >= 'A')
            {
                news2 = s2[i] + 32;
                if (news2 == s1[i])
                    continue;
                else
                    return s1[i] - news2;
            }
            else
                return s1[i] - s2[i];
        }
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strupr(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    for (int i = 0; str[i] != '\0'; i++)
    {
        if (str[i] <= 'z' && str[i] >= 'a')
            str[i] -= 32;
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strlwr(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    for (int i = 0; str[i] != '\0'; i++)
    {
        if (str[i] <= 'Z' && str[i] >= 'A')
            str[i] += 32;
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strchr(const char str[], char ch)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    for (int i = 0; str[i] != '\0'; i++)
        if (str[i] == ch)
            return i + 1;
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strstr(const char str[], const char substr[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int tag = 0;
    for (int i = 0; str[i] != '\0'; i++)
        if (str[i] == substr[0])
        {
            for(int j=1;substr[j]!='\0';j++)
                if (str[i + j] != substr[j])
                {
                    tag = 1;
                    break;
                }
            if (tag == 0)
                return i+1;
            tag = 0;
        }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrchr(const char str[], const char ch)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int tag = 0;
    for (int i = 0; str[i] != '\0'; i++)
        if (str[i] == ch)
           tag=i+1;
    return tag; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrstr(const char str[], const char substr[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int tag = 0;
    int index = 0;
    for (int i = 0; str[i] != '\0'; i++)
        if (str[i] == substr[0])
        {
            for (int j = 1; substr[j] != '\0'; j++)
                if (str[i + j] != substr[j])
                {
                    tag = 1;
                    break;
                }
            if (tag == 0)
                index=i+1;
            tag = 0;
        }
    return index; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrev(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    int j = tj_strlen(str)-1;
    while (i <= j)
    {
        char temp = str[i];
        str[i] = str[j];
        str[j] = temp;
        i++;
        j--;
    }
    return 0; //return值可根据需要修改
}